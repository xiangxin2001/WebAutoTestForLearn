{"name": "主流程冒烟测试", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=115.0.5790.110)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0026A813+48355]\n\t(No symbol) [0x001FC4B1]\n\t(No symbol) [0x00105220]\n\t(No symbol) [0x00131846]\n\t(No symbol) [0x00129F5C]\n\t(No symbol) [0x0014A73C]\n\t(No symbol) [0x00129A36]\n\t(No symbol) [0x0014AA94]\n\t(No symbol) [0x0015C922]\n\t(No symbol) [0x0014A536]\n\t(No symbol) [0x001282DC]\n\t(No symbol) [0x001293DD]\n\tGetHandleVerifier [0x004CAABD+2539405]\n\tGetHandleVerifier [0x0050A78F+2800735]\n\tGetHandleVerifier [0x0050456C+2775612]\n\tGetHandleVerifier [0x002F51E0+616112]\n\t(No symbol) [0x00205F8C]\n\t(No symbol) [0x00202328]\n\t(No symbol) [0x0020240B]\n\t(No symbol) [0x001F4FF7]\n\tBaseThreadInitThunk [0x76FDFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x776E7A7E+286]\n\tRtlGetAppContainerNamedObjectPath [0x776E7A4E+238]\n\t(No symbol) [0x00000000]", "trace": "self = <cloud.cases.smoke_test.TestSmoke object at 0x000001AD03BA1B80>, data = ['admin', '123456', '管理员']\n\n    @allure.title(\"主流程冒烟测试\")\n    @pytest.mark.run(order=1)\n    @pytest.mark.parametrize('data',read_csv(url=f\"{parent_dir}/data/users.csv\"))\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_smoke(self,data):\n        self.driver.get(\"http://192.168.15.129/cloud/#/open/login\")\n        login=LoginPage(driver=self.driver)\n        login.input_username(username=data[0])\n        sleep(1)\n        login.input_userpwd(userpwd=data[1])\n        sleep(1)\n        login.input_valcode(valcode=\"8888\")\n        sleep(1)\n        login.check_pwd_remember_checkbox()\n        sleep(1)\n        login.click_login_button()\n        sleep(2)\n        actual = self.driver.current_url\n        expected = \"http://192.168.15.129/cloud/#/my\"\n        assert expected == actual  #成功登录，进入欢迎页\n        main_page=MainPage(driver=self.driver)\n>       main_page.logout()\n\ncases\\smoke_test.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\main_page.py:50: in logout\n    raise e\npages\\main_page.py:46: in logout\n    self.driver.find_element(*self.logout_li_loc).click()\nC:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nC:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nC:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001AD03BB2790>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...jectPath [0x776E7A7E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x776E7A4E+238]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=115.0.5790.110)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0026A813+48355]\nE       \t(No symbol) [0x001FC4B1]\nE       \t(No symbol) [0x00105220]\nE       \t(No symbol) [0x00131846]\nE       \t(No symbol) [0x00129F5C]\nE       \t(No symbol) [0x0014A73C]\nE       \t(No symbol) [0x00129A36]\nE       \t(No symbol) [0x0014AA94]\nE       \t(No symbol) [0x0015C922]\nE       \t(No symbol) [0x0014A536]\nE       \t(No symbol) [0x001282DC]\nE       \t(No symbol) [0x001293DD]\nE       \tGetHandleVerifier [0x004CAABD+2539405]\nE       \tGetHandleVerifier [0x0050A78F+2800735]\nE       \tGetHandleVerifier [0x0050456C+2775612]\nE       \tGetHandleVerifier [0x002F51E0+616112]\nE       \t(No symbol) [0x00205F8C]\nE       \t(No symbol) [0x00202328]\nE       \t(No symbol) [0x0020240B]\nE       \t(No symbol) [0x001F4FF7]\nE       \tBaseThreadInitThunk [0x76FDFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x776E7A7E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x776E7A4E+238]\nE       \t(No symbol) [0x00000000]\n\nC:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementNotInteractableException"}, "steps": [{"name": "输入用户名", "status": "passed", "parameters": [{"name": "username", "value": "'admin'"}], "start": 1690964322620, "stop": 1690964323049}, {"name": "输入密码", "status": "passed", "parameters": [{"name": "userpwd", "value": "'123456'"}], "start": 1690964324053, "stop": 1690964324281}, {"name": "输入验证码", "status": "passed", "parameters": [{"name": "valcode", "value": "'8888'"}], "start": 1690964325282, "stop": 1690964325547}, {"name": "勾选记住密码", "status": "passed", "start": 1690964326548, "stop": 1690964326668}, {"name": "点击登录按钮", "status": "passed", "start": 1690964327670, "stop": 1690964327792}, {"name": "点击退出登录按钮", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=115.0.5790.110)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0026A813+48355]\n\t(No symbol) [0x001FC4B1]\n\t(No symbol) [0x00105220]\n\t(No symbol) [0x00131846]\n\t(No symbol) [0x00129F5C]\n\t(No symbol) [0x0014A73C]\n\t(No symbol) [0x00129A36]\n\t(No symbol) [0x0014AA94]\n\t(No symbol) [0x0015C922]\n\t(No symbol) [0x0014A536]\n\t(No symbol) [0x001282DC]\n\t(No symbol) [0x001293DD]\n\tGetHandleVerifier [0x004CAABD+2539405]\n\tGetHandleVerifier [0x0050A78F+2800735]\n\tGetHandleVerifier [0x0050456C+2775612]\n\tGetHandleVerifier [0x002F51E0+616112]\n\t(No symbol) [0x00205F8C]\n\t(No symbol) [0x00202328]\n\t(No symbol) [0x0020240B]\n\t(No symbol) [0x001F4FF7]\n\tBaseThreadInitThunk [0x76FDFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x776E7A7E+286]\n\tRtlGetAppContainerNamedObjectPath [0x776E7A4E+238]\n\t(No symbol) [0x00000000]\n\n", "trace": "  File \"C:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"d:\\svn\\lxb\\Web自动化测试\\cloud\\pages\\main_page.py\", line 50, in logout\n    raise e\n  File \"d:\\svn\\lxb\\Web自动化测试\\cloud\\pages\\main_page.py\", line 46, in logout\n    self.driver.find_element(*self.logout_li_loc).click()\n  File \"C:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "attachments": [{"name": "退出登录错误", "source": "8b5cee5e-ef17-45f9-acc0-b95df7f23e63-attachment.png", "type": "image/png"}], "start": 1690964329806, "stop": 1690964331477}], "parameters": [{"name": "data", "value": "['admin', '123456', '管理员']"}], "start": 1690964321622, "stop": 1690964331482, "uuid": "dea97bfa-0685-4ed4-8f62-09b1dbb98d56", "historyId": "473512db26314121f0d93bb9a9796635", "testCaseId": "ceaa53429c60c432ea83d07efedeaf6b", "fullName": "cases.smoke_test.TestSmoke#test_smoke", "labels": [{"name": "epic", "value": "Web自动化测试"}, {"name": "severity", "value": "blocker"}, {"name": "feature", "value": "冒烟测试"}, {"name": "tag", "value": "run(order=1)"}, {"name": "parentSuite", "value": "cases"}, {"name": "suite", "value": "smoke_test"}, {"name": "subSuite", "value": "TestSmoke"}, {"name": "host", "value": "DESKTOP-2GANVQQ"}, {"name": "thread", "value": "11356-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "cases.smoke_test"}]}